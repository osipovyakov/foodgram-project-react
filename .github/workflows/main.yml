name: Foodgram workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt
    - name: Test with flake8 and django tests
      run: |
        python -m flake8
  build_and_push_to_docker_hub:
      runs-on: ubuntu-latest
      needs: tests
      if: ${{ github.ref == 'refs/heads/master' }}
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }} 
            password: ${{ secrets.DOCKER_PASSWORD }}        
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            push: true
            context: backend
            file: backend/Dockerfile
            tags: osipovyakov/foodgram:latest
  deploy:
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
      if: ${{ github.ref == 'refs/heads/master' }}
      steps:
        - name: executing remote ssh commands to deploy
          uses: osipovyakov/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            script: |
              sudo docker stop $(sudo docker ps -a -q)
              sudo docker container rm $(sudo docker container ps -aq)
              sudo docker rmi --force $(sudo docker image ls -a -q)
              sudo docker volume rm $(sudo docker volume ls -f dangling=true -q)
              sudo docker-compose stop          
              sudo docker pull osipovyakov/foodgram_back:latest
              sudo docker pull osipovyakov/foodgram_front:latest
              cd infra/
              rm .env
              touch .env
              echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
              echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
              echo DB_NAME=${{ secrets.DB_NAME }} >> .env
              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
              echo DB_PORT=${{ secrets.DB_PORT }} >> .env
              sudo docker-compose up -d --build
              sudo docker-compose exec -T backend python manage.py makemigrations
              sudo docker-compose exec -T backend python manage.py migrate
              sudo docker-compose exec -T backend python manage.py collectstatic --no-input
              sudo docker-compose exec -T backend python manage.py load_base
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: osipovyakov/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!